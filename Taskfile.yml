version: '3'

tasks:
  clean:
    cmds:
      - rm -rf ./.task
      - rm -rf ./build
      - rm -rf ./gen

  install:
    cmds:
      - task: install:root
      - task: install:web

  install:root:
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go mod download

  install:web:
    cmds:
      - cd web && npm install

  create-cert:
    cmds:
      - mkdir -p .certs
      - openssl req -x509 -newkey rsa:4096 -keyout .certs/key.pem -out .certs/cert.pem -days 365 -nodes -subj '/CN=localhost'

  generate:
    cmds:
      - go generate ./...

  version:prod:
    cmds:
      - cd cmd && git describe --tags --abbrev=0 > version.txt

  lint:
    deps: [ generate ]
    cmds:
      - go vet cmd/standalone/main.go
      - golangci-lint run

  test:
    deps: [ generate ]
    cmds:
      - go test -cover -coverprofile=coverage.out -race ./...
      - go tool cover -html coverage.out -o coverage.html

  dev:
    deps: [ generate ]
    cmds:
      - task: dev:standalone
      - task: dev:web

  dev:standalone:
    deps: [ generate ]
    cmds:
      - go run cmd/standalone/main.go

  dev:web:
    deps: [ generate ]
    cmds:
      - cd web && npm start

  build:
    deps: [ generate ]
    cmds:
      - task: build:standalone

  build:standalone:
    cmds:
      - go build -o build/dev cmd/standalone/main.go
